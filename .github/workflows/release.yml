name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Changes in this Release
            
            See [CHANGELOG.md](https://github.com/kernlog/pump-sniper/blob/main/CHANGELOG.md) for details.
            
            ## Installation
            
            Download the appropriate binary for your platform below, or build from source:
            
            ```bash
            git clone https://github.com/kernlog/pump-sniper.git
            cd pump-sniper
            cargo build --release
            ```

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: pump-sniper-linux-amd64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: pump-sniper-macos-amd64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: pump-sniper-macos-arm64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: pump-sniper-windows-amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package Binaries (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/monitor release/monitor
          cp target/${{ matrix.target }}/release/sniper release/sniper
          cp README.md release/
          cp LICENSE release/
          tar czf ${{ matrix.name }}.tar.gz -C release .

      - name: Package Binaries (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir release
          copy target\${{ matrix.target }}\release\monitor.exe release\monitor.exe
          copy target\${{ matrix.target }}\release\sniper.exe release\sniper.exe
          copy README.md release\
          copy LICENSE release\
          Compress-Archive -Path release\* -DestinationPath ${{ matrix.name }}.zip

      - name: Upload Release Asset (Unix)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.name }}.tar.gz
          asset_name: ${{ matrix.name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.name }}.zip
          asset_name: ${{ matrix.name }}.zip
          asset_content_type: application/zip